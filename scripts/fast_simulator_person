#!/usr/bin/python
import roslib; roslib.load_manifest('fast_simulator')
import rospy

# For reading key press:
import sys, select, termios, tty
import tf

from fast_simulator import client
import subprocess

def getKey():
    tty.setraw(sys.stdin.fileno())
    rlist, _, _ = select.select([sys.stdin], [], [], 0.1)
    if rlist:
        key = sys.stdin.read(1)
        termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
        return key
    else:
        return None

if __name__ == "__main__":
    rospy.init_node('fast_simulator_person')

    settings = termios.tcgetattr(sys.stdin)

    W = client.SimWorld()

    op_x = 1
    op_y = 0

    op = W.add_object("operator", "person", op_x, op_y, 0)

    t_last = rospy.Time.now()

    while not rospy.is_shutdown():
        if (rospy.Time.now() - t_last).secs > 1:
            subprocess.Popen(["rosrun", "cb_base_navigation", "move", "/operator", "x^2+y^2<1^2"])
            t_last = rospy.Time.now()

        op.set_position(op_x, op_y, 0)
        br = tf.TransformBroadcaster()
        br.sendTransform((op_x, op_y, 0), tf.transformations.quaternion_from_euler(0, 0, 0), rospy.Time.now(), "operator", "map")

        key = getKey()
        if key == '8':
            op_x += 0.1
        elif key == '2':
            op_x -= 0.1
        elif key == '4':
            op_y += 0.1
        elif key == '6':
            op_y -= 0.1
        elif key == None:
            continue
        else:
            break



